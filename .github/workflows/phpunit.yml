name: PHPUnit

on: 
  push:

env:
  CACHE_TAG: v1
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache vendor dependencies
        id: cache_vendor_dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-vendor-dependencies-${{ env.CACHE_TAG }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-vendor-dependencies-${{ env.CACHE_TAG }}-
            ${{ runner.os }}-vendor-dependencies-
            ${{ runner.os }}

      - name: Cache node_modules dependencies
        id: cache_node_modules_dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules_dependencies-${{ env.CACHE_TAG }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-dependencies-${{ env.CACHE_TAG }}-
            ${{ runner.os }}-node_modules-dependencies-
            ${{ runner.os }}

      - name: Install composer packages
        if: steps.cache_vendor_dependencies.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-scripts --no-progress


      - name: Setup Node.js
        if: steps.cache_node_modules_dependencies.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install npm packages
        if: steps.cache_node_modules_dependencies.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

  test:
    name: PHPUnit
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.0', '8.1', '8.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup -> PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xdebug, dom

      - name: Cache vendor dependencies
        id: cache_vendor_dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-vendor-dependencies-${{ env.CACHE_TAG }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-vendor-dependencies-${{ env.CACHE_TAG }}-
            ${{ runner.os }}-vendor-dependencies-
            ${{ runner.os }}

      - name: Cache node_modules dependencies
        id: cache_node_modules_dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules_dependencies-${{ env.CACHE_TAG }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-dependencies-${{ env.CACHE_TAG }}-
            ${{ runner.os }}-node_modules-dependencies-
            ${{ runner.os }}

      - name: Install composer packages
        if: steps.cache_vendor_dependencies.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-scripts --no-progress

      - name: Install npm packages
        if: steps.cache_node_modules_dependencies.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Start wp-env
        run: npm run wp-env start --update

      - name: Run test suite
        run: npm run test:env